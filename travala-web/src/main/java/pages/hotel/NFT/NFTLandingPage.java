package pages.hotel.NFT;import commons.hotel.CommonHotelPages;import org.apache.commons.lang.StringUtils;import org.openqa.selenium.By;import org.openqa.selenium.WebDriver;import org.openqa.selenium.WebElement;import java.util.List;import static commons.CommonDataTravala.*;import static commons.CommonsTravalaXpath.*;import static commons.CommonHotelURL.*;import static interfaces.hotel.NFT.NFTLandingPageUI.*;public class NFTLandingPage extends CommonHotelPages {  WebDriver driver;  public NFTLandingPage(WebDriver driver_) {    this.driver = driver_;    super.setDriver(driver);  }  public void loginNFTBySmartAcc() {    clickToElementByJavascript(driver, LOGIN_ICON_HEADER);    loginWithTravalaByEmail(EMAIL_TRAVALA_ACC, PASSWORD_ACC);  }  public void loginNFTByBasicAcc() {    clickToElementByJavascript(driver, LOGIN_ICON_HEADER);    loginWithTravalaByEmail(EMAIL_BELLA_ACC, PASSWORD_ACC);  }  public void verifyBannerNFTLanding() {    String[] optionHeaderExp = {"NFT_HEADER_LIST1", "NFT_HEADER_LIST2", "CONCIERGE_HEADER_MENU3", "NFT_HEADER_LIST6"};    String[] xpath = {NFT_BANNER_TITLE, NFT_BANNER_SUB_TITLE, NFT_BANNER_BUY_NFT_BTN, NFT_INTRODUCING_TITLE, NFT_INTRODUCING_CONTENT, NFT_BENEFIT_TITLE, NFT_BENEFIT_SUB_TITLE};    String[] content = {"NFT_BANNER_TITLE", "NFT_BANNER_SUB_TITLE", "NFT_BANNER_MINT_NFT", "NFT_INTRODUCING_TITLE", "NFT_INTRODUCING_CONTENT", "NFT_BENEFIT_TITLE", "NFT_BENEFIT_SUB_TITLE"};    if (compareTwoListByKey(optionHeaderExp, NFT_HEADER_LIST) && verifyTwoListByKey(content, xpath)) {      System.out.println("Text at header of NFT Landing correct");    } else {      System.out.println("Text at header of NFT Landing wrong");    }    clickToElement(driver, NFT_BANNER_BUY_NFT_BTN);    if (!StringUtils.contains(getCurrentUrl(driver), NFT_PATH)) {      System.out.println("Link to Buy NFT Actual: " + getCurrentUrl(driver));      System.out.println("Link to Buy NFT Expect: " + NFT_PATH);    }    switchTab(driver);  }  public void verifyBenefitNFT() {    String[] benefitDesc = {"NFT_BENEFIT_DESC1", "NFT_BENEFIT_DESC2", "NFT_BENEFIT_DESC3", "NFT_BENEFIT_DESC4", "NFT_BENEFIT_DESC5",      "NFT_BENEFIT_DESC6", "NFT_BENEFIT_DESC7", "NFT_BENEFIT_DESC8", "NFT_BENEFIT_DESC10", "NFT_BENEFIT_DESC12"};    String[] benefitRightDesc = {"SMART_INTRO_DIAMOND_TITLE4", "WHITELIST_BENEFIT_SUB_TITLE1", "SMART_INTRO_DIAMOND_TITLE5"};    String[] benefitLeftDesc = {"SMART_INTRO_DIAMOND_TITLE10", "SMART_INTRO_DIAMOND_TITLE8", "NFT_BENEFIT_TITLE3"};    boolean a = compareTwoListByKey(benefitRightDesc, NFT_BENEFIT_RIGHT_TITLE) && compareTwoListByKey(benefitLeftDesc, NFT_BENEFIT_LEFT_TITLE) && verifyTextByKey("SMART_INTRO_DIAMOND_TITLE7",      NFT_BENEFIT_BOTTOM_TITLE);    if (!a) {      System.out.println("Option Title Benefit NFT Wrong");    }    boolean b = compareTwoListByKey(benefitDesc, NFT_BENEFIT_DESC);    if (!b) {      System.out.println("Content Benefit NFT Wrong");    }    if (a && b) {      System.out.println("Text at Benefit of NFT Landing correct");    }  }  public void verifySaleMechanics() {    scrollToElement(driver, NFT_HOW_TO_MINT_TITLE);    String[] xpath = {NFT_SALE_PRICE, NFT_SALE_PAYMENT_OPTION, NFT_HOW_TO_MINT_TITLE};    String[] content = {"NFT_SALE_PRICE", "NFT_SALE_PAYMENT_OPTION", "NFT_HOW_TO_MINT_TITLE"};    String[] paymentOption = {"NFT_SALE_PAYMENT_OPTION_CONTENT1", "NFT_SALE_PAYMENT_OPTION_CONTENT2"};    if (verifyTwoListByKey(content, xpath) && compareTwoListByKey(paymentOption, NFT_SALE_PAYMENT_OPTION_CONTENT)){      System.out.println("Content at Sale Mechanics correct!");    } else {      System.out.println("Content at Sale Mechanics wrong!");    }     String[] subTitle = {"NFT_HOW_TO_MINT_SUB_TITLE1", "NFT_HOW_TO_MINT_SUB_TITLE2", "NFT_HOW_TO_MINT_SUB_TITLE3", "NFT_HOW_TO_MINT_SUB_TITLE4", "NFT_HOW_TO_MINT_SUB_TITLE5"};    String[] min1List = {"NFT_HOW_TO_MINT1_LIST1", "NFT_HOW_TO_MINT1_LIST2", "NFT_HOW_TO_MINT1_LIST3"};    String[] minList = {"NFT_HOW_TO_MINT_LIST1", "NFT_HOW_TO_MINT_LIST2", "NFT_HOW_TO_MINT_LIST3", "NFT_HOW_TO_MINT_LIST4"};    if (compareTwoListByKey(subTitle, NFT_HOW_TO_MINT_SUB_TITLE) && compareTwoListByKey(      min1List, NFT_HOW_TO_MINT1_LIST) && compareTwoListByKey(minList, NFT_HOW_TO_MINT_LIST)) {      System.out.println("Content at How to Work correct!");    } else {      System.out.println("Content at How to Work  wrong!");    }  }  public void verifyCampaignGiveAway() {    String[] xpath = {CAMPAIGN_GIVEAWAY_TITLE, CAMPAIGN_GIVEAWAY_SUB_TITLE, CAMPAIGN_GIVEAWAY_CONTENT, CAMPAIGN_GIVEAWAY_PACKAGE_TITLE,      CAMPAIGN_GIVEAWAY_PACKAGE_CONTENT1, CAMPAIGN_GIVEAWAY_PACKAGE_CONTENT2};    String[] content = {"CAMPAIGN_GIVEAWAY_TITLE", "CAMPAIGN_GIVEAWAY_SUB_TITLE", "CAMPAIGN_GIVEAWAY_CONTENT", "CAMPAIGN_GIVEAWAY_PACKAGE_TITLE",      "CAMPAIGN_GIVEAWAY_SUB_CONTENT1", "CAMPAIGN_GIVEAWAY_SUB_CONTENT2"};    String[] packageContent = {"CAMPAIGN_GIVEAWAY_PACKAGE_CONTENT2", "CAMPAIGN_GIVEAWAY_PACKAGE_CONTENT3", "CAMPAIGN_GIVEAWAY_PACKAGE_CONTENT4",      "CAMPAIGN_GIVEAWAY_PACKAGE_CONTENT5", "CAMPAIGN_GIVEAWAY_PACKAGE_CONTENT6", "CAMPAIGN_GIVEAWAY_PACKAGE_CONTENT7", "CAMPAIGN_GIVEAWAY_PACKAGE_CONTENT8"};    if (compareTwoListByKey(packageContent, CAMPAIGN_GIVEAWAY_PACKAGE_LIST_CONTENT) && verifyTwoListByKey(content, xpath)) {      System.out.println("Text at Campaign GiveAway of NFT Landing correct");    } else {      System.out.println("Text at Campaign GiveAway of NFT Landing wrong");    }  }  public boolean verifyFAQNFT() {    String[] questionFAQS = {"EXPLORE_NFT_PAGE_QUESTION1", "EXPLORE_NFT_PAGE_QUESTION2", "EXPLORE_NFT_PAGE_QUESTION3", "EXPLORE_NFT_PAGE_QUESTION4", "EXPLORE_NFT_PAGE_QUESTION5"};    boolean isQuestionFAQS = verifyListItemByListExpect(questionFAQS, NFT_FAQ_QUESTION_LIST, NFT_FAQ_QUESTION_DYNAMIC);    String[] answerFAQS = {"EXPLORE_NFT_PAGE_ANSWER1", "EXPLORE_NFT_PAGE_ANSWER2", "EXPLORE_NFT_PAGE_ANSWER3", "EXPLORE_NFT_PAGE_ANSWER4", "EXPLORE_NFT_PAGE_ANSWER5"};    boolean isAnswerFAQ = true;    List<WebElement> listFAQsTitle = driver.findElements(By.xpath(NFT_FAQ_QUESTION_LIST));    for (int i = 0; i < listFAQsTitle.size(); i++) {      WebElement element = driver.findElement(By.xpath(String.format(NFT_FAQ_QUESTION_DYNAMIC, String.valueOf(i+1))));      element.click();      String actual = getTextElement(driver, String.format(NFT_FAQ_ANSWER_DYNAMIC, String.valueOf(i+1))).trim().replaceAll("\\r\\n|\\r|\\n", " ").replaceAll("\\r", "").replaceAll("\\n", "").replaceAll("<br>", "");      String expect = getTextFromReadFile(answerFAQS[i]).trim();      if (!expect.contains(actual)) {        System.out.println("EXPECT: " + expect);        System.out.println("ACTUAL: " + actual);        isAnswerFAQ = false;      }    }    return isQuestionFAQS && isAnswerFAQ;  }  public void verifyTextAtNFTLanding() {    waitFoElementVisible(driver, NFT_IMG_WRAPPER);//    verifyBannerNFTLanding();    verifySaleMechanics();//    verifyCampaignGiveAway();//    verifyBenefitNFT();//    verifyFAQNFT();  }  public BuyNFTPage clickBuyNFTBtn() {    clickToElementByJavascript(driver, BUY_NFT_BTN);    return new BuyNFTPage(driver);  }  public void verifyContentTextAtNFTLanding() {    boolean flag = true;    String[] banner = {"EXPLORE_NFT_PAGE_BANNER_TITLE", "EXPLORE_NFT_PAGE_BANNER_SUB", "EXPLORE_NFT_PAGE_BUY_NFT_BUTTON"};    String[] xpathInBanner = {NFT_BANNER_TITLE, NFT_BANNER_SUB_TITLE, NFT_BANNER_BUY_NFT_BTN};    boolean isBannerCorrect = verifyTwoListByKey(banner, xpathInBanner);    String[] introducing = {"EXPLORE_NFT_PAGE_INTRODUCE_TRAVEL_TIGER_TITLE", "EXPLORE_NFT_PAGE_INTRODUCE_TRAVEL_TIGER_DES"};    String[] xpathInIntroducing = {NFT_INTRODUCING_TITLE, NFT_INTRODUCING_CONTENT};    boolean isIntroducingCorrect = verifyTwoListByKey(introducing, xpathInIntroducing);    String[] benifits = {"EXPLORE_NFT_PAGE_DIAMOND_BENEFITS_TITLE", "EXPLORE_NFT_PAGE_DIAMOND_BENEFITS_SUB"};    String[] xpathBenifits = {NFT_BENEFIT_TITLE, NFT_BENEFIT_SUB_TITLE};    boolean isBenifitsCorrect = verifyTwoListByKey(benifits, xpathBenifits);    String[] benifitsTitle = {"EXPLORE_NFT_PAGE_AMBASSADOR_BONUS_TITLE", "EXPLORE_NFT_PAGE_TRAVEL_DROPS_TITLE", "EXPLORE_NFT_PAGE_METAVERSES_TITLE", "EXPLORE_NFT_PAGE_CONCIERGE_ACCESS_TITLE"                            , "EXPLORE_NFT_PAGE_LOYALTY_REWARDS_TITLE", "EXPLORE_NFT_PAGE_AVA_PAYMENT_TITLE", "EXPLORE_NFT_PAGE_PROOF_TRAVEL_TITLE", "EXPLORE_NFT_PAGE_TRVL_AIRDROPS_TITLE", "EXPLORE_NFT_PAGE_AIRPORT_LOUNGES_TITLE"};    boolean isBenifitsTitleCorrect = verifyListItemByListExpect(benifitsTitle, NFT_BENIFIT_TITLE_LIST, NFT_BENIFIT_TITLE_DYNAMIC);    String[] benifitsDescOfTitle = {"EXPLORE_NFT_PAGE_AMBASSADOR_BONUS_PARAGRAPH", "EXPLORE_NFT_PAGE_TRAVEL_DROPS_PARAGRAPH", "EXPLORE_NFT_PAGE_METAVERSES_PARAGRAPH", "EXPLORE_NFT_PAGE_CONCIERGE_ACCESS_PARAGRAPH"                            , "EXPLORE_NFT_PAGE_LOYALTY_REWARDS_PARAGRAPH", "EXPLORE_NFT_PAGE_AVA_PAYMENT_PARAGRAPH", "EXPLORE_NFT_PAGE_PROOF_TRAVEL_PARAGRAPH", "EXPLORE_NFT_PAGE_TRVL_AIRDROPS_PARAGRAPH", "EXPLORE_NFT_PAGE_AIRPORT_LOUNGES_PARAGRAPH"};    boolean isBenifitsDescOfTitleCorrect = verifyListItemByListExpect(benifitsDescOfTitle, NFT_BENIFIT_DESC_LIST, NFT_BENIFIT_DESC_DYNAMIC);    boolean isFAQS = verifyFAQNFT();    String[] joinNFT = {"EXPLORE_NFT_PAGE_JOIN_NFT_CLUB_TITLE", "EXPLORE_NFT_PAGE_JOIN_NFT_CLUB_SUB", "EXPLORE_NFT_PAGE_BUY_NFT_BUTTON"};    String[] xpathOfJoinNFT = {NFT_JOIN_NFT_TITLE, NFT_JOIN_NFT_SUB, NFT_JOIN_NFT_BUTTON_BUY_NFT};    boolean isJoinNFT = verifyTwoListByKey(joinNFT, xpathOfJoinNFT);    flag = isBannerCorrect && isIntroducingCorrect && isBenifitsCorrect && isBenifitsTitleCorrect && isBenifitsDescOfTitleCorrect && isFAQS && isJoinNFT;    if(flag) {      System.out.println("Content of Explore NFT Langding page correctly!");    } else {      System.out.println("Content of Explore NFT Langding page incorrectly!");    }  }}